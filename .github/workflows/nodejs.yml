name: Node.js CI

on:
  push:
    branches:
      - '*'

env:
  isNightly: ${{ contains(github.ref, 'dev') }}
  isFinalRelease: ${{ contains(github.ref, 'master') }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
    - name: Setup Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Check out source code
      uses: actions/checkout@v2
    
    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build:prod

    - name: Package Distribution
      run: cd dist && zip -r web-config-client.zip *

    - name: Create Release Candidate
      if: env.isNightly == 'true'
      id: create_release_candidate
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest-rc
        release_name: latest-rc
        prerelease: true

    - name: Create Release
      if: env.isFinalRelease == 'true'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest
        release_name: latest
        prerelease: true

    - name: Upload Release Asset
      if: env.isNightly == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_candidate.outputs.upload_url }}
        asset_path: ./dist/web-config-client.zip
        asset_name: web-config-client
        asset_content_type: application/zip

    - name: Upload Release Asset
      if: env.isFinalRelease == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/web-config-client.zip
        asset_name: web-config-client
        asset_content_type: application/zip   
